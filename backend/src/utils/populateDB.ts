import ShoppingItem from "../models/ShoppingItem";
import ShoppingList from "../models/ShoppingList";

// simple function to add dummy data to db for testing purposes (generated by github copilot)
async function populateDB() {
  try {
    // Clear existing data
    await ShoppingItem.deleteMany({});
    await ShoppingList.deleteMany({});

    // Create 10 sample shopping items
    const items = [
      { name: "Apfel", description: "Frischer roter Apfel", price: 0.99 },
      { name: "Brot", description: "Knuspriges Weißbrot", price: 2.49 },
      { name: "Milch", description: "Fettarme Kuhmilch", price: 1.19 },
      { name: "Käse", description: "Milder Gouda", price: 2.99 },
      { name: "Butter", description: "Cremige Butter", price: 1.79 },
      { name: "Bananen", description: "Reife gelbe Bananen", price: 1.49 },
      { name: "Kartoffeln", description: "Bio-Kartoffeln, festkochend", price: 3.99 },
      { name: "Eier", description: "Freilandeier, 10 Stück", price: 3.29 },
      { name: "Tomaten", description: "Saftige rote Tomaten", price: 2.49 },
      { name: "Schokolade", description: "Vollmilch-Schokolade", price: 1.39 },
    ];

    // Save all items to the database
    const savedItems = await ShoppingItem.insertMany(items);

    // Create 3 sample shopping lists
    const shoppingLists = [
      {
        name: "Wocheneinkauf",
        description: "Lebensmittel für die Woche",
        items: [
          { item: savedItems[0]._id, quantity: 6, status: "not purchased" }, // Apfel
          { item: savedItems[1]._id, quantity: 2, status: "purchased" }, // Brot
          { item: savedItems[2]._id, quantity: 3, status: "not purchased" }, // Milch
        ],
      },
      {
        name: "Partybedarf",
        description: "Snacks und Getränke für die Party",
        items: [
          { item: savedItems[3]._id, quantity: 1, status: "purchased" }, // Käse
          { item: savedItems[4]._id, quantity: 1, status: "not purchased" }, // Butter
          { item: savedItems[9]._id, quantity: 4, status: "not purchased" }, // Schokolade
        ],
      },
      {
        name: "Gemüse-Einkauf",
        description: "Frisches Gemüse und mehr",
        items: [
          { item: savedItems[7]._id, quantity: 10, status: "purchased" }, // Eier
          { item: savedItems[8]._id, quantity: 5, status: "not purchased" }, // Tomaten
          { item: savedItems[6]._id, quantity: 2, status: "not purchased" }, // Kartoffeln
        ],
      },
    ];

    // Save shopping lists to the database
    await ShoppingList.insertMany(shoppingLists);

    console.log("Datenbank mit 10 Artikeln und 3 Einkaufslisten initialisiert.");
  } catch (error) {
    console.error("Fehler beim Initialisieren der Datenbank:", error);
  }
}

export default populateDB;
